<Project Sdk="Microsoft.Build.NoTargets/3.7.56" DefaultTargets="Build">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <Target Name="PruneAddons" BeforeTargets="Build" Condition="Exists('$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons')">
    <Message Importance="high" Text="Pruning addons..." />
    
    <!--
        List all addon folders from the public/Nitrocid.Addons folder. Any addon folder, even if it does not
        necessarily represent a valid project, will have their names un-prefixed to add them to the whitelist.
    -->
    <ItemGroup>
      <NitrocidAddonsNames Include="$([System.IO.Directory]::GetDirectories('$(RootPath)/public/Nitrocid.Addons'))" />
      <NitrocidAddonsNames>
        <AddonProjectName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonProjectName>
      </NitrocidAddonsNames>
    </ItemGroup>

    <!--
        Process the names so that we can get the directory names, then un-prefix them to add them to the addon
        pruning whitelist.
    -->
    <ItemGroup>
      <NitrocidAddonsOutputs Include="%(NitrocidAddonsNames.AddonProjectName)" />
      <NitrocidAddonsOutputs>
        <AddonOutputName>$([System.String]::Copy('%(Identity)').Replace('Nitrocid.',''))</AddonOutputName>
      </NitrocidAddonsOutputs>
    </ItemGroup>

    <!--
        We have a whitelist now. So, use it to remove any extraneous addons. First, we need to query the build
        output of the main Nitrocid project. In the Addons folder, the addons are already un-prefixed.
    -->
    <ItemGroup>
      <OutputAddonsNames Include="$([System.IO.Directory]::GetDirectories('$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons'))" />
      <OutputAddonsNames>
        <AddonOutputName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonOutputName>
      </OutputAddonsNames>
    </ItemGroup>

    <!--
        Create a filtered list of addons that are to be wiped
    -->
    <ItemGroup>
      <ExcludedAddons Include="@(OutputAddonsNames->'%(AddonOutputName)'->Distinct())" />
      <ExcludedAddons Remove="@(NitrocidAddonsOutputs->'%(AddonOutputName)')" />
    </ItemGroup>

    <!--
        Wipe out all folders that are in the ExcludedAddons item
    -->
    <ItemGroup>
      <FullPathsToPrune Include="$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons/%(ExcludedAddons.Identity)" Condition=" '@(ExcludedAddons)' != '' "/>
    </ItemGroup>
    <Message Importance="high" Text="Pruning addon: %(FullPathsToPrune.Identity)" Condition=" '@(ExcludedAddons)' != '' " />
    <RemoveDir Directories="@(FullPathsToPrune)" ContinueOnError="true" Condition=" '@(ExcludedAddons)' != '' " />

    <!--
        Now, we need to check the source addon folders to see if there are folders without a valid
        csproj file for an addon.
    -->
    <ItemGroup>
      <AddonSources Include="@(NitrocidAddonsNames)">
        <AddonProjectName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonProjectName>
        <FullAddonSourcePaths>$(RootPath)/public/Nitrocid.Addons/%(AddonProjectName)</FullAddonSourcePaths>
        <FullAddonSourceProjectPaths>$(RootPath)/public/Nitrocid.Addons/%(AddonProjectName)/%(AddonProjectName).csproj</FullAddonSourceProjectPaths>
      </AddonSources>
    </ItemGroup>
    <CreateItem Include="%(AddonSources.FullAddonSourcePaths)"
                Condition="!$([System.IO.File]::Exists('%(AddonSources.FullAddonSourceProjectPaths)'))">
      <Output TaskParameter="Include" ItemName="InvalidAddonSources"/>
    </CreateItem>

    <!--
        Wipe out all folders that are in the InvalidAddonSources item
    -->
    <Message Importance="high" Text="Pruning addon source: %(InvalidAddonSources.Identity)" Condition=" '@(InvalidAddonSources)' != '' " />
    <RemoveDir Directories="@(InvalidAddonSources)" ContinueOnError="true" Condition=" '@(InvalidAddonSources)' != '' " />

    <!--
        Declare victory!
    -->
    <Message Importance="high" Text="No obsolete addons!" Condition=" '@(ExcludedAddons)' == '' " />
    <Message Importance="high" Text="Pruning addons done!" Condition=" '@(ExcludedAddons)' != '' " />
    
    <!--
        Clean up
    -->
    <ItemGroup Condition=" '@(NitrocidAddonsNames)' != '' ">
      <NitrocidAddonsNames Remove="@(NitrocidAddonsNames)" />
      <NitrocidAddonsOutputs Remove="@(NitrocidAddonsOutputs)" />
      <OutputAddonsNames Remove="@(OutputAddonsNames)" />
      <ExcludedAddons Remove="@(ExcludedAddons)" />
      <FullPathsToPrune Remove="@(FullPathsToPrune)" />
      <AddonSources Remove="@(AddonSources)" />
      <InvalidAddonSources Remove="@(InvalidAddonSources)" />
    </ItemGroup>
  </Target>

  <Target Name="PruneEssentialAddons" BeforeTargets="Build" Condition="Exists('$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons.Essentials')">
    <Message Importance="high" Text="Pruning essential addons..." />
    
    <!--
        See above for more info
    -->
    <ItemGroup>
      <NitrocidAddonsNames Include="$([System.IO.Directory]::GetDirectories('$(RootPath)/public/Nitrocid.Addons.Essentials'))" />
      <NitrocidAddonsNames>
        <AddonProjectName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonProjectName>
      </NitrocidAddonsNames>
    </ItemGroup>

    <ItemGroup>
      <NitrocidAddonsOutputs Include="%(NitrocidAddonsNames.AddonProjectName)" />
      <NitrocidAddonsOutputs>
        <AddonOutputName>$([System.String]::Copy('%(Identity)').Replace('Nitrocid.',''))</AddonOutputName>
      </NitrocidAddonsOutputs>
    </ItemGroup>

    <ItemGroup>
      <OutputAddonsNames Include="$([System.IO.Directory]::GetDirectories('$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons.Essentials'))" />
      <OutputAddonsNames>
        <AddonOutputName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonOutputName>
      </OutputAddonsNames>
    </ItemGroup>

    <ItemGroup>
      <ExcludedAddons Include="@(OutputAddonsNames->'%(AddonOutputName)'->Distinct())" />
      <ExcludedAddons Remove="@(NitrocidAddonsOutputs->'%(AddonOutputName)')" />
    </ItemGroup>

    <ItemGroup>
      <FullPathsToPrune Include="$(RootPath)/public/Nitrocid/KSBuild/net10.0/Addons.Essentials/%(ExcludedAddons.Identity)" Condition=" '@(ExcludedAddons)' != '' "/>
    </ItemGroup>
    <Message Importance="high" Text="Pruning essential addon: %(FullPathsToPrune.Identity)" Condition=" '@(ExcludedAddons)' != '' " />
    <RemoveDir Directories="@(FullPathsToPrune)" ContinueOnError="true" Condition=" '@(ExcludedAddons)' != '' " />

    <ItemGroup>
      <AddonSources Include="@(NitrocidAddonsNames)">
        <AddonProjectName>$([System.IO.Path]::GetFileName('%(Identity)'))</AddonProjectName>
        <FullAddonSourcePaths>$(RootPath)/public/Nitrocid.Addons.Essentials/%(AddonProjectName)</FullAddonSourcePaths>
        <FullAddonSourceProjectPaths>$(RootPath)/public/Nitrocid.Addons.Essentials/%(AddonProjectName)/%(AddonProjectName).csproj</FullAddonSourceProjectPaths>
      </AddonSources>
    </ItemGroup>
    <CreateItem Include="%(AddonSources.FullAddonSourcePaths)"
                Condition="!$([System.IO.File]::Exists('%(AddonSources.FullAddonSourceProjectPaths)'))">
      <Output TaskParameter="Include" ItemName="InvalidAddonSources"/>
    </CreateItem>

    <Message Importance="high" Text="Pruning essential addon source: %(InvalidAddonSources.Identity)" Condition=" '@(InvalidAddonSources)' != '' " />
    <RemoveDir Directories="@(InvalidAddonSources)" ContinueOnError="true" Condition=" '@(InvalidAddonSources)' != '' " />

    <Message Importance="high" Text="No obsolete essential addons!" Condition=" '@(ExcludedAddons)' == '' " />
    <Message Importance="high" Text="Pruning essentials done!" Condition=" '@(ExcludedAddons)' != '' " />

    <ItemGroup Condition=" '@(NitrocidAddonsNames)' != '' ">
      <NitrocidAddonsNames Remove="@(NitrocidAddonsNames)" />
      <NitrocidAddonsOutputs Remove="@(NitrocidAddonsOutputs)" />
      <OutputAddonsNames Remove="@(OutputAddonsNames)" />
      <ExcludedAddons Remove="@(ExcludedAddons)" />
      <FullPathsToPrune Remove="@(FullPathsToPrune)" />
      <AddonSources Remove="@(AddonSources)" />
      <InvalidAddonSources Remove="@(InvalidAddonSources)" />
    </ItemGroup>
  </Target>

</Project>