//
// Nitrocid KS  Copyright (C) 2018-2025  Aptivi
//
// This file is part of Nitrocid KS
//
// Nitrocid KS is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Nitrocid KS is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY, without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using Newtonsoft.Json;
using System.IO;
using System.Linq;
using System.Text;

namespace Nitrocid.Generators.KnownAddons
{
    [Generator]
    public class KnownAddonsGen : IIncrementalGenerator
    {
        private string knownAddons = "";

        public void Initialize(IncrementalGeneratorInitializationContext context)
        {
            // Get the data content
            var asm = typeof(KnownAddonsGen).Assembly;
            var stream = asm.GetManifestResourceStream($"{asm.GetName().Name}.Resources.KnownAddons.json");
            using var reader = new StreamReader(stream);
            knownAddons = reader.ReadToEnd();

            // Now, populate the enumerations and data properties
            PopulateEnums(context);
            PopulateData(context);
        }

        private void PopulateData(IncrementalGeneratorInitializationContext context)
        {
            string header =
                $$"""
                //
                // Nitrocid KS  Copyright (C) 2018-2025  Aptivi
                //
                // This file is part of Nitrocid KS
                //
                // Nitrocid KS is free software: you can redistribute it and/or modify
                // it under the terms of the GNU General Public License as published by
                // the Free Software Foundation, either version 3 of the License, or
                // (at your option) any later version.
                //
                // Nitrocid KS is distributed in the hope that it will be useful,
                // but WITHOUT ANY WARRANTY, without even the implied warranty of
                // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                // GNU General Public License for more details.
                //
                // You should have received a copy of the GNU General Public License
                // along with this program.  If not, see <https://www.gnu.org/licenses/>.
                //
                
                // <auto-generated/>

                using System.Collections.Generic;

                namespace Nitrocid.Kernel.Extensions
                {
                    public static partial class InterAddonTranslations
                    {
                        private static readonly Dictionary<KnownAddons, (string, string)> knownAddons = new()
                        {
                            // Note: The names are not to be localized for usage with GetAddonName(), because they are constant addon names.
                
                """;
            string footer =
                $$"""
                        };
                    }
                }
                """;
            var builder = new StringBuilder(header);

            // Read all the data
            var list = JsonConvert.DeserializeObject<KnownAddonInfo[]>(knownAddons);
            var names = list.Select((data) => data.Name).ToArray();
            if (list is null)
                return;

            // Populate all the data properties
            foreach (var addonData in list)
            {
                string name = addonData.Name;
                string display = addonData.Display;
                string project = addonData.Project;
                builder.AppendLine(
                    $$"""
                                { KnownAddons.{{name}}, ("{{project}}", "{{display}}") },
                    """
                );
            }
            builder.AppendLine();

            // Add the source code to the compilation
            builder.AppendLine(footer);
            context.RegisterPostInitializationOutput(ctx =>
            {
                ctx.AddSource("InterAddonTranslations.g.cs", SourceText.From(builder.ToString(), Encoding.UTF8));
            });
        }

        private void PopulateEnums(IncrementalGeneratorInitializationContext context)
        {
            string header =
                $$"""
                //
                // Nitrocid KS  Copyright (C) 2018-2025  Aptivi
                //
                // This file is part of Nitrocid KS
                //
                // Nitrocid KS is free software: you can redistribute it and/or modify
                // it under the terms of the GNU General Public License as published by
                // the Free Software Foundation, either version 3 of the License, or
                // (at your option) any later version.
                //
                // Nitrocid KS is distributed in the hope that it will be useful,
                // but WITHOUT ANY WARRANTY, without even the implied warranty of
                // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                // GNU General Public License for more details.
                //
                // You should have received a copy of the GNU General Public License
                // along with this program.  If not, see <https://www.gnu.org/licenses/>.
                //
                
                // <auto-generated/>

                namespace Nitrocid.Kernel.Extensions
                {
                    /// <summary>
                    /// Known addons list for inter-addon communication
                    /// </summary>
                    public enum KnownAddons
                    {
                
                """;
            string footer =
                $$"""
                    }
                }
                """;
            var builder = new StringBuilder(header);

            // Read all the data
            var list = JsonConvert.DeserializeObject<KnownAddonInfo[]>(knownAddons);
            if (list is null)
                return;

            // Populate all the enumerations
            foreach (var addonData in list)
            {
                string name = addonData.Name;
                string display = addonData.Display;
                string project = addonData.Project;
                builder.AppendLine(
                    $$"""
                            /// <summary>
                            /// "{{display}}" from the Nitrocid.{{project}} addon project
                            /// </summary>
                            {{name}},
                    """
                );
            }

            // Add the source code to the compilation
            builder.AppendLine(footer);
            context.RegisterPostInitializationOutput(ctx =>
            {
                ctx.AddSource("KnownAddons.cs", SourceText.From(builder.ToString(), Encoding.UTF8));
            });
        }
    }
}
