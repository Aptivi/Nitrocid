<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_COLORCONVERT_REDCOLOR" xml:space="preserve">
    <value>紅色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_GREENCOLOR" xml:space="preserve">
    <value>綠色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_BLUECOLOR" xml:space="preserve">
    <value>藍色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_CYANCOLOR" xml:space="preserve">
    <value>青色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_MAGENTACOLOR" xml:space="preserve">
    <value>洋紅色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_YELLOWCOLOR" xml:space="preserve">
    <value>黃色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_HUE" xml:space="preserve">
    <value>色調：</value>
  </data>
  <data name="NKS_COLORCONVERT_SATURATION" xml:space="preserve">
    <value>飽和：</value>
  </data>
  <data name="NKS_COLORCONVERT_VALUE" xml:space="preserve">
    <value>價值：</value>
  </data>
  <data name="NKS_COLORCONVERT_YELLOWCOLOR" xml:space="preserve">
    <value>黃色等級：</value>
  </data>
  <data name="NKS_COLORCONVERT_LUMA" xml:space="preserve">
    <value>亮度：</value>
  </data>
  <data name="NKS_COLORCONVERT_INPHASE" xml:space="preserve">
    <value>同相：</value>
  </data>
  <data name="NKS_COLORCONVERT_QUADRATURE" xml:space="preserve">
    <value>正交：</value>
  </data>
  <data name="NKS_COLORCONVERT_UCHROMA" xml:space="preserve">
    <value>U-色度：</value>
  </data>
  <data name="NKS_COLORCONVERT_VCHROMA" xml:space="preserve">
    <value>V-色度：</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORTO_DESC" xml:space="preserve">
    <value>將來源色彩模型以數字形式轉換為目標色彩模型。</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORTOKS_DESC" xml:space="preserve">
    <value>將來源色彩模型轉換為 KS 格式的目標色彩模型。</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORTOHEX_DESC" xml:space="preserve">
    <value>將來源色彩模型轉換為十六進位。</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORSPECTO_DESC" xml:space="preserve">
    <value>使用顏色說明符將來源顏色模型轉換為目標顏色模型。</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORSPECTOKS_DESC" xml:space="preserve">
    <value>使用顏色說明符將來源色彩模型轉換為 KS 格式的目標色彩模型。</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_COLORSPECTOHEX_DESC" xml:space="preserve">
    <value>使用顏色說明符將來源顏色模型轉換為十六進制的目標顏色模型。</value>
  </data>
  <data name="NKS_COLORCONVERT_INVALIDMODEL" xml:space="preserve">
    <value>型號規格無效。</value>
  </data>
  <data name="NKS_COLORCONVERT_BLACKKEY" xml:space="preserve">
    <value>黑鍵電平：</value>
  </data>
  <data name="NKS_COLORCONVERT_FIRSTLEVELNUMERIC" xml:space="preserve">
    <value>第一個顏色等級必須是數字。</value>
  </data>
  <data name="NKS_COLORCONVERT_SECONDLEVELNUMERIC" xml:space="preserve">
    <value>第二個顏色等級必須是數字。</value>
  </data>
  <data name="NKS_COLORCONVERT_THIRDLEVELNUMERIC" xml:space="preserve">
    <value>第三個顏色等級必須是數字。</value>
  </data>
  <data name="NKS_COLORCONVERT_FOURTHLEVELNUMERIC" xml:space="preserve">
    <value>第四個鍵級別必須是數字。</value>
  </data>
  <data name="NKS_COLORCONVERT_LUMINANCE" xml:space="preserve">
    <value>亮度（明度）：</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_SOURCEMODELNAME_DESC" xml:space="preserve">
    <value>來源色彩模型</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_TARGETMODELNAME_DESC" xml:space="preserve">
    <value>目標色彩模型</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_NUMBER1_DESC" xml:space="preserve">
    <value>第一個數字</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_NUMBER2_DESC" xml:space="preserve">
    <value>第二個數字</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_NUMBER3_DESC" xml:space="preserve">
    <value>第三個數字</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_NUMBER4_DESC" xml:space="preserve">
    <value>第四</value>
  </data>
  <data name="NKS_COLORCONVERT_COMMAND_ARGUMENT_SPECIFIER_DESC" xml:space="preserve">
    <value>顏色指定器</value>
  </data>

</root>
