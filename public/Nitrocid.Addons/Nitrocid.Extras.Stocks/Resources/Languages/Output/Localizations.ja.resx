<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_STOCKS_COMMAND_STOCK_DESC" xml:space="preserve">
    <value>1時間ごとの株価情報を取得します</value>
  </data>
  <data name="NKS_STOCKS_COMMAND_STOCK_ARGUMENT_COMPANY_DESC" xml:space="preserve">
    <value>短縮会社シンボル</value>
  </data>
  <data name="NKS_STOCKS_AVAPIKEYPROMPT" xml:space="preserve">
    <value>AlphaVantage APIキーを入力してください</value>
  </data>
  <data name="NKS_STOCKS_AVAPIKEYNEEDED" xml:space="preserve">
    <value>API キーを入力してください。</value>
  </data>
  <data name="NKS_STOCKS_AVAPIKEYISDEMO" xml:space="preserve">
    <value>デモ API キーは使用できません。</value>
  </data>
  <data name="NKS_STOCKS_AVAPIKEYINVALIDLENGTH" xml:space="preserve">
    <value>API キーの長さは 16 文字にする必要があります。</value>
  </data>
  <data name="NKS_STOCKS_AVAPIFAILED" xml:space="preserve">
    <value>株式データの取得中にエラーが発生しました。追加情報はここをご覧ください</value>
  </data>
  <data name="NKS_STOCKS_TUI_OPENING" xml:space="preserve">
    <value>株価の初値</value>
  </data>
  <data name="NKS_STOCKS_TUI_HIGH" xml:space="preserve">
    <value>株価高騰</value>
  </data>
  <data name="NKS_STOCKS_TUI_LOW" xml:space="preserve">
    <value>株価が低い</value>
  </data>
  <data name="NKS_STOCKS_TUI_CLOSING" xml:space="preserve">
    <value>終値</value>
  </data>
  <data name="NKS_STOCKS_TUI_VOLUME" xml:space="preserve">
    <value>在庫量</value>
  </data>
  <data name="NKS_STOCKS_AVAPIKEYCONFIGURE" xml:space="preserve">
    <value>APIキーが必要です。設定から設定してください。</value>
  </data>
  <data name="NKS_STOCKS_NODATA" xml:space="preserve">
    <value>在庫データがありません。</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_DESC" xml:space="preserve">
    <value>このセクションでは、株式を設定できます。</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_APIKEY_NAME" xml:space="preserve">
    <value>APIキー</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_APIKEY_DESC" xml:space="preserve">
    <value>AlphaVantage Stocks API のキー</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_COMPANY_NAME" xml:space="preserve">
    <value>会社コード</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_COMPANY_DESC" xml:space="preserve">
    <value>株式会社</value>
  </data>
  <data name="NKS_STOCKS_SETTINGS_EXCEPTION_ENTRIESFAILED" xml:space="preserve">
    <value>設定エントリを取得できませんでした。</value>
  </data>
  <data name="NKS_STOCKS_TUI_CANTOBTAININFO" xml:space="preserve">
    <value>在庫情報を取得できません。</value>
  </data>

</root>
