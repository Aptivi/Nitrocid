<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_DATES_KEYBINDING_EXIT" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="NKS_DATES_COMMAND_GETTIMEINFO_DESC" xml:space="preserve">
    <value>Gets the date and time information</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_MS" xml:space="preserve">
    <value>Milliseconds:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_SECONDS" xml:space="preserve">
    <value>Seconds:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_MINUTES" xml:space="preserve">
    <value>Minutes:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_HOURS" xml:space="preserve">
    <value>Hours:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DAYS" xml:space="preserve">
    <value>Days:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_MONTHS" xml:space="preserve">
    <value>Months:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_YEARS" xml:space="preserve">
    <value>Year:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DAYOFYEAR" xml:space="preserve">
    <value>Day of Year:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DAYOFWEEK" xml:space="preserve">
    <value>Day of Week:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_BINARY" xml:space="preserve">
    <value>Binary:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_LOCALTIME" xml:space="preserve">
    <value>Local Time:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_UNIVERSALTIME" xml:space="preserve">
    <value>Universal Time:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_UNIXTIME" xml:space="preserve">
    <value>Unix Time:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DATEINFOCANTPARSE1" xml:space="preserve">
    <value>Failed to parse date information for</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DATEINFOCANTPARSE2" xml:space="preserve">
    <value>Ensure that the format is correct.</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_DATE" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_TIME" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="NKS_DATES_COMMAND_STOPWATCH_DESC" xml:space="preserve">
    <value>A simple stopwatch</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_STARTSTOP" xml:space="preserve">
    <value>Start or stop</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_LAP" xml:space="preserve">
    <value>Lap</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_RESET" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="NKS_DATES_COMMAND_TIMER_DESC" xml:space="preserve">
    <value>A simple timer</value>
  </data>
  <data name="NKS_DATES_TIMERS_KEYBINDING_SETTIME" xml:space="preserve">
    <value>Set interval</value>
  </data>
  <data name="NKS_DATES_TIMERS_TIMEOUTNEEDSNUMBER" xml:space="preserve">
    <value>Indicated timeout is not numeric.</value>
  </data>
  <data name="NKS_DATES_TIMERS_TIMEOUTPROMPT" xml:space="preserve">
    <value>Specify the timeout in milliseconds</value>
  </data>
  <data name="NKS_DATES_COMMON_SETTINGS_FIGLETFONT_DESC" xml:space="preserve">
    <value>Write a figlet font that is supported by the Figgle library. Consult the library documentation for more information</value>
  </data>
  <data name="NKS_DATES_TIMER_SETTINGS_FIGLETFONT_NAME" xml:space="preserve">
    <value>Figlet font for timer</value>
  </data>
  <data name="NKS_DATES_TIMER_SETTINGS_ENABLEFIGLET_NAME" xml:space="preserve">
    <value>Enable Figlet for timer</value>
  </data>
  <data name="NKS_DATES_TIMER_SETTINGS_ENABLEFIGLET_DESC" xml:space="preserve">
    <value>If enabled, will use figlet for timer. Please note that it needs a big console screen in order to render the time properly with Figlet enabled.</value>
  </data>
  <data name="NKS_DATES_COMMAND_GETTIMEINFO_SWITCH_NOW_DESC" xml:space="preserve">
    <value>Gets the current date and time information</value>
  </data>
  <data name="NKS_DATES_TIMEINFO_HEADER" xml:space="preserve">
    <value>Information for</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_STATUS_READY" xml:space="preserve">
    <value>Stopwatch is ready.</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_STATUS_RUNNING" xml:space="preserve">
    <value>Stopwatch running!</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_STATUS_NEWLAP" xml:space="preserve">
    <value>New lap!</value>
  </data>
  <data name="NKS_DATES_TIMERS_KEYBINDING_COUNTDOWN" xml:space="preserve">
    <value>Start counting down</value>
  </data>
  <data name="NKS_DATES_SETTINGS_EXCEPTION_ENTRIESFAILED" xml:space="preserve">
    <value>Failed to obtain settings entries.</value>
  </data>
  <data name="NKS_DATES_HOMEPAGE_TIMER" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="NKS_DATES_HOMEPAGE_STOPWATCH" xml:space="preserve">
    <value>Stopwatch</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_NOLAPS" xml:space="preserve">
    <value>No laps yet...</value>
  </data>
  <data name="NKS_DATES_STOPWATCH_LAPLIST" xml:space="preserve">
    <value>Lap list</value>
  </data>
  <data name="NKS_DATES_COMMAND_POMODORO_DESC" xml:space="preserve">
    <value>Pomodoro timer</value>
  </data>
  <data name="NKS_DATES_HOMEPAGE_POMODORO" xml:space="preserve">
    <value>Pomodoro</value>
  </data>
  <data name="NKS_DATES_POMODORO_STATUS_READY" xml:space="preserve">
    <value>Pomodoro timer is ready</value>
  </data>
  <data name="NKS_DATES_POMODORO_STATUS_TIMERNUM" xml:space="preserve">
    <value>Pomodoro timer number {0} in four iterations</value>
  </data>
  <data name="NKS_DATES_POMODORO_STATUS_SHORTBREAK" xml:space="preserve">
    <value>Short break</value>
  </data>
  <data name="NKS_DATES_POMODORO_TIMEOUTPROMPT" xml:space="preserve">
    <value>Specify the break timeout in milliseconds</value>
  </data>
  <data name="NKS_DATES_POMODORO_KEYBINDING_SETBREAKTIME" xml:space="preserve">
    <value>Set break interval</value>
  </data>
  <data name="NKS_DATES_COMMAND_GETTIMEINFO_ARGUMENT_DATE_DESC" xml:space="preserve">
    <value>Date and time to print info from</value>
  </data>
  <data name="NKS_DATES_TIMER_SETTINGS_DESC" xml:space="preserve">
    <value>This section lets you configure how the timer application works.</value>
  </data>
  <data name="NKS_DATES_POMODORO_SETTINGS_DESC" xml:space="preserve">
    <value>This section lets you configure how the pomodoro timer application works.</value>
  </data>
  <data name="NKS_DATES_POMODORO_SETTINGS_ENABLEFIGLET_NAME" xml:space="preserve">
    <value>Enable Figlet for the pomodoro timer</value>
  </data>
  <data name="NKS_DATES_POMODORO_SETTINGS_ENABLEFIGLET_DESC" xml:space="preserve">
    <value>If enabled, will use figlet for the pomodoro timer. Please note that it needs a big console screen in order to render the time properly with Figlet enabled.</value>
  </data>
  <data name="NKS_DATES_POMODORO_SETTINGS_FIGLETFONT_NAME" xml:space="preserve">
    <value>Figlet font for the pomodoro timer</value>
  </data>
  <data name="NKS_DATES_EXPIRY_PRODDATEINVALID" xml:space="preserve">
    <value>Production date is invalid</value>
  </data>
  <data name="NKS_DATES_EXPIRY_EXPTIMEINVALID" xml:space="preserve">
    <value>Expiry time period is invalid</value>
  </data>
  <data name="NKS_DATES_EXPIRY_EXPDATEINVALID" xml:space="preserve">
    <value>Expiry date is invalid</value>
  </data>
  <data name="NKS_DATES_EXPIRY_PRODDATE" xml:space="preserve">
    <value>Production date</value>
  </data>
  <data name="NKS_DATES_EXPIRY_EXPDATE" xml:space="preserve">
    <value>Expiry date</value>
  </data>
  <data name="NKS_DATES_EXPIRY_EXPTIME" xml:space="preserve">
    <value>Expiry time span</value>
  </data>
  <data name="NKS_DATES_EXPIRY_PRODHEALTH" xml:space="preserve">
    <value>Product health</value>
  </data>
  <data name="NKS_DATES_EXPIRY_PRODSTATUS" xml:space="preserve">
    <value>Product status</value>
  </data>
  <data name="NKS_DATES_EXPIRY_NOEXPIRYINFO" xml:space="preserve">
    <value>Failed to get product expiry information</value>
  </data>
  <data name="NKS_DATES_COMMAND_EXPIRY_DESC" xml:space="preserve">
    <value>Gets the product expiry information</value>
  </data>
  <data name="NKS_DATES_COMMAND_EXPIRY_ARGUMENT_PRODUCTION_DESC" xml:space="preserve">
    <value>Production date (look at either the side or the bottom of the product)</value>
  </data>
  <data name="NKS_DATES_COMMAND_EXPIRY_ARGUMENT_EXPIRY_DESC" xml:space="preserve">
    <value>Expiry date or time period (either explicitly written in the same spot or time spans, such as 6 months or 1 year)</value>
  </data>
  <data name="NKS_DATES_COMMAND_EXPIRY_STATUS_IMPLICIT_DESC" xml:space="preserve">
    <value>Whether the target product doesn&apos;t specify the expiry date explicitly</value>
  </data>

</root>
