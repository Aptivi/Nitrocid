<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_BASSBOOM_SCREENSAVER_SETTINGS_DELAY_NAME" xml:space="preserve">
    <value>Delay in Milliseconds</value>
  </data>
  <data name="NKS_BASSBOOM_SCREENSAVER_SETTINGS_DELAY_DESC" xml:space="preserve">
    <value>How many milliseconds to wait before making the next write?</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_LYRICLINES_DESC" xml:space="preserve">
    <value>Gets all lyric lines from the lyric file</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_PLAYLYRIC_DESC" xml:space="preserve">
    <value>Plays a lyric file</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_PLAYSOUND_DESC" xml:space="preserve">
    <value>Plays a sound</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_NETFMINFO_DESC" xml:space="preserve">
    <value>Gets information about your online radio station</value>
  </data>
  <data name="NKS_BASSBOOM_NOLYRICFILE" xml:space="preserve">
    <value>Make sure to specify the path to an LRC file.</value>
  </data>
  <data name="NKS_BASSBOOM_NOSOUNDFILE" xml:space="preserve">
    <value>Can&apos;t play sound because the file is not found.</value>
  </data>
  <data name="NKS_BASSBOOM_OPENEDSOUNDFILE" xml:space="preserve">
    <value>Opened music file successfully.</value>
  </data>
  <data name="NKS_BASSBOOM_CANTOPENSOUNDFILE" xml:space="preserve">
    <value>Can&apos;t open music file.</value>
  </data>
  <data name="NKS_BASSBOOM_TIMEOUT" xml:space="preserve">
    <value>Can&apos;t play sound because of timeout.</value>
  </data>
  <data name="NKS_BASSBOOM_UNKNOWNARTIST" xml:space="preserve">
    <value>Unknown Artist</value>
  </data>
  <data name="NKS_BASSBOOM_UNKNOWNGENRE" xml:space="preserve">
    <value>Unknown Genre</value>
  </data>
  <data name="NKS_BASSBOOM_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NKS_BASSBOOM_ARTIST" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="NKS_BASSBOOM_GENRE" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="NKS_BASSBOOM_DURATION" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="NKS_BASSBOOM_STOPPLAYING" xml:space="preserve">
    <value>Press &apos;q&apos; to stop playing.</value>
  </data>
  <data name="NKS_BASSBOOM_CANTPLAY" xml:space="preserve">
    <value>Can&apos;t play sound.</value>
  </data>
  <data name="NKS_BASSBOOM_TITLE" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_PORTINVALID" xml:space="preserve">
    <value>The port number for your online radio is invalid.</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_FULLURL" xml:space="preserve">
    <value>Full URL</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_CURRENTLISTENERS" xml:space="preserve">
    <value>Current listeners</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_PEAKLISTENERS" xml:space="preserve">
    <value>Peak listeners</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_STREAMS" xml:space="preserve">
    <value>Streams</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_ACTIVESTREAMS" xml:space="preserve">
    <value>Active streams</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_STREAMINFO" xml:space="preserve">
    <value>Stream info for ID</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_PATH" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_CURRENTLYPLAYING" xml:space="preserve">
    <value>Currently playing</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_UPTIME" xml:space="preserve">
    <value>Uptime</value>
  </data>
  <data name="NKS_BASSBOOM_LYRICFILENOTFOUND" xml:space="preserve">
    <value>Make sure to specify the path to a directory containing your lyric files in the LRC format. You can also specify a custom path to your music library folder containing the lyric files.</value>
  </data>
  <data name="NKS_BASSBOOM_EXCEPTION_LYRICFILENOTFOUND" xml:space="preserve">
    <value>This lyrics file doesn&apos;t exist.</value>
  </data>
  <data name="NKS_BASSBOOM_SCREENSAVER_SETTINGS_DESC" xml:space="preserve">
    <value>Settings for this screensaver are available here.</value>
  </data>
  <data name="NKS_BASSBOOM_SETTINGS_DESC" xml:space="preserve">
    <value>This section lets you configure how the BassBoom addon works.</value>
  </data>
  <data name="NKS_BASSBOOM_SETTINGS_LYRICSPATH_NAME" xml:space="preserve">
    <value>Lyrics Path</value>
  </data>
  <data name="NKS_BASSBOOM_SETTINGS_LYRICSPATH_DESC" xml:space="preserve">
    <value>Sets the path to a folder containing a group of .lrc files. Write an absolute path to any existing directory.</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_STATIONTYPE" xml:space="preserve">
    <value>Station type</value>
  </data>
  <data name="NKS_BASSBOOM_SETTINGS_EXCEPTION_ENTRIESFAILED" xml:space="preserve">
    <value>Failed to obtain settings entries.</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_HEADER" xml:space="preserve">
    <value>Internet Radio (FM) info for</value>
  </data>
  <data name="NKS_BASSBOOM_RADIO_CANTGETINFO" xml:space="preserve">
    <value>Can&apos;t get internet radio information.</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_ARGUMENT_LYRICLRC_DESC" xml:space="preserve">
    <value>Path to the lyric file</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_ARGUMENT_MUSICFILE_DESC" xml:space="preserve">
    <value>Path to an MP3 file</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_NETFMINFO_ARGUMENT_HOSTNAME_DESC" xml:space="preserve">
    <value>Host name that hosts the MPEG radio station</value>
  </data>
  <data name="NKS_BASSBOOM_COMMAND_NETFMINFO_ARGUMENT_PORT_DESC" xml:space="preserve">
    <value>Port to the MPEG radio station</value>
  </data>

</root>
