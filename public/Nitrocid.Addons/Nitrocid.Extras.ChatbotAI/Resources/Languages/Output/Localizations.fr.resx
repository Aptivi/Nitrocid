<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_CHATBOTAI_COMMAND_CHATBOT_DESC" xml:space="preserve">
    <value>Initialise le chatbot avec ChatGPT</value>
  </data>
  <data name="NKS_CHATBOTAI_COMMAND_CHATBOT_SWITCH_APIKEY_DESC" xml:space="preserve">
    <value>Remplace la clé API configurée dans les paramètres</value>
  </data>
  <data name="NKS_CHATBOTAI_COMMAND_CHATBOT_SWITCH_MODEL_DESC" xml:space="preserve">
    <value>Spécifie la variante du modèle ChatGPT</value>
  </data>
  <data name="NKS_CHATBOTAI_SHELL_DISCLAIMER" xml:space="preserve">
    <value>Nous encourageons une utilisation responsable du chatbot. Ce dernier utilise l&apos;API de ChatGPT, propriété d&apos;OpenAI. Nous n&apos;y sommes pas affiliés et il ne s&apos;agit pas d&apos;un client ChatGPT officiel. Nous vous recommandons de lire les conditions générales de ChatGPT avant d&apos;utiliser le chatbot. Vous pouvez quitter avec « /exit ».</value>
  </data>
  <data name="NKS_CHATBOTAI_COMMON_SHELL_ERROR" xml:space="preserve">
    <value>Une erreur s&apos;est produite avec le shell Chatbot AI :</value>
  </data>
  <data name="NKS_CHATBOTAI_SHELL_COMMAND_PROMPT_DESC" xml:space="preserve">
    <value>Envoie une invite au chatbot</value>
  </data>
  <data name="NKS_CHATBOTAI_SHELL_COMMAND_PROMPT_ARGUMENT_PROMPTSTRING_DESC" xml:space="preserve">
    <value>Chaîne représentant l&apos;invite</value>
  </data>
  <data name="NKS_CHATBOTAI_EXCEPTION_NOCLIENT" xml:space="preserve">
    <value>Il n&apos;y a pas de client chatbot.</value>
  </data>
  <data name="NKS_CHATBOTAI_RESPONDING" xml:space="preserve">
    <value>Réponse en cours…</value>
  </data>
  <data name="NKS_CHATBOTAI_POSTRESPONSE" xml:space="preserve">
    <value>Ce chatbot peut générer des réponses inexactes ; veuillez donc vérifier les informations.</value>
  </data>
  <data name="NKS_CHATBOTAI_EXCEPTION_LASTSHELLTYPEMISMATCH" xml:space="preserve">
    <value>Le dernier shell n&apos;est pas celui dont vous souhaitez vous détacher.</value>
  </data>
  <data name="NKS_CHATBOTAI_SETTINGS_EXCEPTION_ENTRIESFAILED" xml:space="preserve">
    <value>Échec de l&apos;obtention des entrées de paramètres.</value>
  </data>
  <data name="NKS_CHATBOTAI_APIKEYPROMPT" xml:space="preserve">
    <value>Écrire une clé API pour ChatGPT</value>
  </data>
  <data name="NKS_CHATBOTAI_APIKEYNOTPROVIDED" xml:space="preserve">
    <value>La clé API n&apos;est pas fournie.</value>
  </data>
  <data name="NKS_CHATBOTAI_SETTINGS_ENTRYDESC" xml:space="preserve">
    <value>Configure l&apos;IA du chatbot optimisée par ChatGPT</value>
  </data>
  <data name="NKS_CHATBOTAI_SETTINGS_CHATGPTAPIKEY_NAME" xml:space="preserve">
    <value>Clé API ChatGPT</value>
  </data>
  <data name="NKS_CHATBOTAI_SETTINGS_CHATGPTAPIKEY_DESC" xml:space="preserve">
    <value>Votre clé API pour ChatGPT pour l&apos;accès. Bien que vous puissiez utiliser la clé API gratuite, vous ne pouvez pas utiliser les modèles avancés. Pour un accès complet à tous les modèles payants, vous devrez payer.</value>
  </data>

</root>
