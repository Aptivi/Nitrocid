<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
        <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="metadata">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string" />
                <xsd:attribute name="type" type="xsd:string" />
                <xsd:attribute name="mimetype" type="xsd:string" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="assembly">
            <xsd:complexType>
                <xsd:attribute name="alias" type="xsd:string" />
                <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="data">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                <xsd:attribute ref="xml:space" />
            </xsd:complexType>
            </xsd:element>
            <xsd:element name="resheader">
            <xsd:complexType>
                <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
            </xsd:element>
        </xsd:choice>
        </xsd:complexType>
    </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
    <value>2.0</value>
    </resheader>
    <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
      <data name="NKS_MODS_MODCANTLOAD" xml:space="preserve">
    <value>Mod can&apos;t be loaded because of the following: </value>
  </data>
  <data name="NKS_MODS_MODSTARTED" xml:space="preserve">
    <value>{0} v{1} started</value>
  </data>
  <data name="NKS_MODS_MODPARSESAFEMODE" xml:space="preserve">
    <value>Parsing mods not allowed on safe mode.</value>
  </data>
  <data name="NKS_MODS_MODSTOPPED1" xml:space="preserve">
    <value>Mod {0} stopped</value>
  </data>
  <data name="NKS_MODS_MODSTOPPED2" xml:space="preserve">
    <value>{0} v{1} stopped</value>
  </data>
  <data name="NKS_MODS_CANTFINALIZE" xml:space="preserve">
    <value>Failed to finalize mod {0}: {1}</value>
  </data>
  <data name="NKS_MODS_STARTINGMOD" xml:space="preserve">
    <value>Starting mod</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODVER" xml:space="preserve">
    <value>Mod version:</value>
  </data>
  <data name="NKS_MODS_MODNOTFOUND" xml:space="preserve">
    <value>Mod {0} not found.</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODNAME" xml:space="preserve">
    <value>Mod name:</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODFILENAME" xml:space="preserve">
    <value>Mod file name:</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODFILEPATH" xml:space="preserve">
    <value>Mod file path:</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMAN_DESC" xml:space="preserve">
    <value>Manage your mods</value>
  </data>
  <data name="NKS_MODS_MODMAN_SAFEMODE" xml:space="preserve">
    <value>Mod management is disabled in safe mode.</value>
  </data>
  <data name="NKS_MODS_MODMAN_NOCOMMAND" xml:space="preserve">
    <value>Invalid command {0}. Check the usage below:</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODNOTFOUND" xml:space="preserve">
    <value>Mod not found or file has invalid characters.</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_MANPAGEINVALID" xml:space="preserve">
    <value>The manual page {0} is invalid.</value>
  </data>
  <data name="NKS_MODS_MANPAGE_NEEDSFILL" xml:space="preserve">
    <value>Consider filling this manual page.</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMANUAL_DESC" xml:space="preserve">
    <value>Mod manual</value>
  </data>
  <data name="NKS_MODS_MODSTOPPINGSAFEMODE" xml:space="preserve">
    <value>Stopping mods not allowed on safe mode.</value>
  </data>
  <data name="NKS_MODS_MODALREADYSTARTED" xml:space="preserve">
    <value>Mod has already been started!</value>
  </data>
  <data name="NKS_MODS_MODHASNTSTARTED" xml:space="preserve">
    <value>Mod hasn&apos;t started yet!</value>
  </data>
  <data name="NKS_MODS_MODNEEDSUPGRADE" xml:space="preserve">
    <value>Contact the vendor of the mod to upgrade the mod to the compatible version.</value>
  </data>
  <data name="NKS_MODS_SETTINGS_BLACKLISTEDMODS_NAME" xml:space="preserve">
    <value>Blacklisted mods</value>
  </data>
  <data name="NKS_MODS_SETTINGS_BLACKLISTEDMODS_DESC" xml:space="preserve">
    <value>Write the filenames of the mods that will not run on startup. When you&apos;re finished, write &quot;q&quot;. Write a minus sign next to the path to remove an existing mod.</value>
  </data>
  <data name="NKS_MODS_MODBLACKLISTED" xml:space="preserve">
    <value>Mod {0} is blacklisted.</value>
  </data>
  <data name="NKS_MODS_SETTINGS_AUTOSTART_NAME" xml:space="preserve">
    <value>Start kernel modifications on boot</value>
  </data>
  <data name="NKS_MODS_SETTINGS_AUTOSTART_DESC" xml:space="preserve">
    <value>Automatically start the kernel modifications on boot.</value>
  </data>
  <data name="NKS_MODS_MODMAN_MODFILENEEDED" xml:space="preserve">
    <value>Mod file is not specified.</value>
  </data>
  <data name="NKS_MODS_MODUPDATING" xml:space="preserve">
    <value>Trying to install an already-installed mod. Updating mod...</value>
  </data>
  <data name="NKS_MODS_MODINSTALLFAILED" xml:space="preserve">
    <value>Installation failed for</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_NOMODSCRIPT" xml:space="preserve">
    <value>The mod file provided is incompatible.</value>
  </data>
  <data name="NKS_MODS_MODUNINSTALLFAILED" xml:space="preserve">
    <value>Uninstallation failed for</value>
  </data>
  <data name="NKS_MODS_SETTINGS_MODCOMMANDSCOUNT_NAME" xml:space="preserve">
    <value>Show the mod commands count on help</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_INVALIDMODFILE" xml:space="preserve">
    <value>The modfile is invalid.</value>
  </data>
  <data name="NKS_MODS_MANPAGE_UNTITLEDMANPAGE" xml:space="preserve">
    <value>Untitled manual page</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_MODSCRIPTNEEDED" xml:space="preserve">
    <value>The mod script may not be null.</value>
  </data>
  <data name="NKS_MODS_NOMODS" xml:space="preserve">
    <value>No mods detected.</value>
  </data>
  <data name="NKS_MODS_STOPPINGMODS" xml:space="preserve">
    <value>Stopping mod {0}...</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_UNSAFEMOD" xml:space="preserve">
    <value>The mod is not strongly signed. It may contain untrusted code.</value>
  </data>
  <data name="NKS_MODS_MODINCOMPATIBLE1" xml:space="preserve">
    <value>Mod can&apos;t be loaded because there&apos;s an incompatibility between this version of the kernel and this mod:</value>
  </data>
  <data name="NKS_MODS_MODINCOMPATIBLE2" xml:space="preserve">
    <value>Here&apos;s a list of errors that may help you investigate this incompatibility:</value>
  </data>
  <data name="NKS_MODS_MODNEEDSAPIEXACT" xml:space="preserve">
    <value>Mod {0} requires exactly an API version {1}, but you have version {2}. Upgrading Nitrocid KS and/or the mod usually helps. Mod parsing failed.</value>
  </data>
  <data name="NKS_MODS_MODHASNOAPIVERSION" xml:space="preserve">
    <value>Mod {0} may not work properly with this API version. Mod may fail to start up. Contact the mod vendor to get a latest copy.</value>
  </data>
  <data name="NKS_MODS_MODNEDSNAME" xml:space="preserve">
    <value>Mod {0} does not have the name. Mod parsing failed. Review the source code.</value>
  </data>
  <data name="NKS_MODS_MODNEEDSVERSION" xml:space="preserve">
    <value>Mod {0} does not have the version. Mod parsing failed. Review the source code.</value>
  </data>
  <data name="NKS_MODS_MODVERSIONINVALID" xml:space="preserve">
    <value>Mod {0} contains invalid version. Mod parsing failed. Version was</value>
  </data>
  <data name="NKS_MODS_TUI_MODVERSION" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="NKS_MODS_TUI_MODFILENAME" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="NKS_MODS_TUI_MODFILEPATH" xml:space="preserve">
    <value>File path</value>
  </data>
  <data name="NKS_MODS_MANTUI_HASNOCONTENTS" xml:space="preserve">
    <value>Unfortunately, this manual page doesn&apos;t have any contents. However, this documentation might have been found under the mod vendor&apos;s webpage. If you still can&apos;t find this documentation, ask the developers of the mod for more information.</value>
  </data>
  <data name="NKS_MODS_MANTUI_PRESENTED" xml:space="preserve">
    <value>Presented to you by</value>
  </data>
  <data name="NKS_MODS_MANTUI_CONTENTLENGTH" xml:space="preserve">
    <value>Content length</value>
  </data>
  <data name="NKS_MODS_MANTUI_NOCONTENTS" xml:space="preserve">
    <value>No contents.</value>
  </data>
  <data name="NKS_MODS_MANTUI_NOREVISION" xml:space="preserve">
    <value>No revision.</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_MODNOTFOUND" xml:space="preserve">
    <value>Can&apos;t execute custom function with non-existent mod</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_DEPSFAILED" xml:space="preserve">
    <value>Dependency unsatisfied. Failed dependencies are listed below:</value>
  </data>
  <data name="NKS_MODS_MANPAGE_EXCEPTION_MODNOTFOUND" xml:space="preserve">
    <value>Tried to query the manuals for nonexistent mod {0}.</value>
  </data>
  <data name="NKS_MODS_MANPAGE_EXCEPTION_INITMANNOTFOUND" xml:space="preserve">
    <value>Tried to initialize the manual {0} for nonexistent mod {1}.</value>
  </data>
  <data name="NKS_MODS_MANPAGE_EXCEPTION_INITMANFILENOTFOUND" xml:space="preserve">
    <value>Tried to initialize the manual file {0} for nonexistent mod {1}.</value>
  </data>
  <data name="NKS_MODS_MANPAGE_EXCEPTION_INITMANFILENOTFORMOD" xml:space="preserve">
    <value>Tried to initialize the manual file {0} which doesn&apos;t exist for mod {1}.</value>
  </data>
  <data name="NKS_MODS_TUI_MODNAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NKS_MODS_SETTINGS_ALLOWUNTRUSTED_NAME" xml:space="preserve">
    <value>Allow loading untrusted mods</value>
  </data>
  <data name="NKS_MODS_SETTINGS_ALLOWUNTRUSTED_DESC" xml:space="preserve">
    <value>If set to true, the kernel won&apos;t error out upon loading mods that don&apos;t have the signed public key.</value>
  </data>
  <data name="NKS_MODS_SETTINGS_MODCOMMANDSCOUNT_DESC" xml:space="preserve">
    <value>Show the count of kernel modification commands when listing them in the help command</value>
  </data>
  <data name="NKS_MODS_STARTSTOPSAFEMODE" xml:space="preserve">
    <value>Starting or stopping mods not allowed on safe mode.</value>
  </data>
  <data name="NKS_MODS_INTERMOD_NOFIELDINFO" xml:space="preserve">
    <value>Can&apos;t get field info for</value>
  </data>
  <data name="NKS_MODS_EXCEPTION_DEPNOMODVER" xml:space="preserve">
    <value>Can&apos;t determine mod version</value>
  </data>
  <data name="NKS_MODS_UNKNOWNLOADEREXCEPTION" xml:space="preserve">
    <value>Unknown loader exception</value>
  </data>
  <data name="NKS_MODS_SETTINGS_EXCEPTION_ENTRIESFAILED" xml:space="preserve">
    <value>Failed to obtain settings entries.</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_STARTMODSELECT" xml:space="preserve">
    <value>Start mod (select)</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_STARTMODINPUT" xml:space="preserve">
    <value>Start mod (input)</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_STOPMOD" xml:space="preserve">
    <value>Stop mod</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_RELOADMOD" xml:space="preserve">
    <value>Reload mod</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_INSTALLMODSELECT" xml:space="preserve">
    <value>Install mod (select)</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_INSTALLMODINPUT" xml:space="preserve">
    <value>Install mod (input)</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_UNINSTALLMOD" xml:space="preserve">
    <value>Uninstall mod</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_STARTALL" xml:space="preserve">
    <value>Start all</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_STOPALL" xml:space="preserve">
    <value>Stop all</value>
  </data>
  <data name="NKS_MODS_TUI_KEYBINDING_RELOADALL" xml:space="preserve">
    <value>Reload all</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_CLASSTYPENOTFOUND" xml:space="preserve">
    <value>Can&apos;t return non-existent class type from mod assembly</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_FUNCTIONNOTFOUND" xml:space="preserve">
    <value>Can&apos;t find function &apos;{0}&apos; in mod &apos;{1}&apos;.</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_PROPERTYNOTFOUND" xml:space="preserve">
    <value>Can&apos;t find property &apos;{0}&apos; in mod &apos;{1}&apos;.</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_FIELDNOTFOUND" xml:space="preserve">
    <value>Can&apos;t find field &apos;{0}&apos; in mod &apos;{1}&apos;.</value>
  </data>
  <data name="NKS_MODS_INTERMOD_EXCEPTION_NOTMODCLASS" xml:space="preserve">
    <value>This class is not an mod class</value>
  </data>
  <data name="NKS_MODS_TUI_MODENTRYPOINT" xml:space="preserve">
    <value>Entry point</value>
  </data>
  <data name="NKS_MODS_TUI_PATHTOMODPROMPT" xml:space="preserve">
    <value>Enter a path to the mod that you want to start</value>
  </data>
  <data name="NKS_MODS_TUI_MODSTARTFAILED" xml:space="preserve">
    <value>Failed to start mod</value>
  </data>
  <data name="NKS_MODS_TUI_PATHTOMODINSTALLPROMPT" xml:space="preserve">
    <value>Enter a path to the mod that you want to install</value>
  </data>
  <data name="NKS_MODS_TUI_MODINSTALLFAILED" xml:space="preserve">
    <value>Failed to install mod</value>
  </data>
  <data name="NKS_MODS_CANTSTARTORSTOP" xml:space="preserve">
    <value>Can&apos;t start or stop this mod!</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMAN_ARGUMENT_STARTSTOP_DESC" xml:space="preserve">
    <value>Whether to start, stop, get info out of, reload, install, or uninstall a mod</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMAN_ARGUMENT_MODFILENAME_DESC" xml:space="preserve">
    <value>Mod name or file name</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMAN_ARGUMENT_LISTRELOAD_DESC" xml:space="preserve">
    <value>Whether to list, reload, stop, start, or interactively manage all mods</value>
  </data>
  <data name="NKS_MODS_COMMAND_MODMANUAL_ARGUMENT_MODNAME_DESC" xml:space="preserve">
    <value>Mod name</value>
  </data>
  <data name="NKS_MODS_SETTINGS_DESC" xml:space="preserve">
    <value>This section lets you configure how the kernel modification system works.</value>
  </data>

</root>
